{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Darshnik\\\\Desktop\\\\medley pharma\\\\frontend\\\\src\\\\context\\\\CartContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport function useCart() {\n  _s();\n  return useContext(CartContext);\n}\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport function CartProvider({\n  children\n}) {\n  _s2();\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const {\n    user\n  } = useAuth();\n\n  // Load cart from localStorage on initial load\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      setCart(JSON.parse(storedCart));\n    }\n    setLoading(false);\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      const existingItemIndex = prevCart.findIndex(item => item.product._id === product._id);\n      if (existingItemIndex >= 0) {\n        // Item already exists, update quantity\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex].quantity += quantity;\n        return updatedCart;\n      } else {\n        // Item doesn't exist, add new item\n        return [...prevCart, {\n          product,\n          quantity\n        }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = productId => {\n    setCart(prevCart => prevCart.filter(item => item.product._id !== productId));\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    setCart(prevCart => {\n      return prevCart.map(item => {\n        if (item.product._id === productId) {\n          return {\n            ...item,\n            quantity\n          };\n        }\n        return item;\n      });\n    });\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Calculate total price\n  const calculateTotal = () => {\n    return cart.reduce((total, item) => {\n      return total + item.product.price * item.quantity;\n    }, 0);\n  };\n\n  // Calculate total items\n  const calculateTotalItems = () => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  };\n  const value = {\n    cart,\n    loading,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    calculateTotal,\n    calculateTotalItems\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 10\n  }, this);\n}\n_s2(CartProvider, \"NBo7c8lHLAaf8jafAXzcgYuY5/k=\", false, function () {\n  return [useAuth];\n});\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","useAuth","axios","jsxDEV","_jsxDEV","CartContext","useCart","_s","CartProvider","children","_s2","cart","setCart","loading","setLoading","user","storedCart","localStorage","getItem","JSON","parse","setItem","stringify","addToCart","product","quantity","prevCart","existingItemIndex","findIndex","item","_id","updatedCart","removeFromCart","productId","filter","updateQuantity","map","clearCart","calculateTotal","reduce","total","price","calculateTotalItems","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Darshnik/Desktop/medley pharma/frontend/src/context/CartContext.js"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport { useAuth } from './AuthContext';\nimport axios from 'axios';\n\nconst CartContext = createContext();\n\nexport function useCart() {\n  return useContext(CartContext);\n}\n\nexport function CartProvider({ children }) {\n  const [cart, setCart] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const { user } = useAuth();\n\n  // Load cart from localStorage on initial load\n  useEffect(() => {\n    const storedCart = localStorage.getItem('cart');\n    if (storedCart) {\n      setCart(JSON.parse(storedCart));\n    }\n    setLoading(false);\n  }, []);\n\n  // Save cart to localStorage whenever it changes\n  useEffect(() => {\n    localStorage.setItem('cart', JSON.stringify(cart));\n  }, [cart]);\n\n  // Add item to cart\n  const addToCart = (product, quantity = 1) => {\n    setCart(prevCart => {\n      const existingItemIndex = prevCart.findIndex(item => item.product._id === product._id);\n      \n      if (existingItemIndex >= 0) {\n        // Item already exists, update quantity\n        const updatedCart = [...prevCart];\n        updatedCart[existingItemIndex].quantity += quantity;\n        return updatedCart;\n      } else {\n        // Item doesn't exist, add new item\n        return [...prevCart, { product, quantity }];\n      }\n    });\n  };\n\n  // Remove item from cart\n  const removeFromCart = (productId) => {\n    setCart(prevCart => prevCart.filter(item => item.product._id !== productId));\n  };\n\n  // Update item quantity\n  const updateQuantity = (productId, quantity) => {\n    if (quantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    \n    setCart(prevCart => {\n      return prevCart.map(item => {\n        if (item.product._id === productId) {\n          return { ...item, quantity };\n        }\n        return item;\n      });\n    });\n  };\n\n  // Clear cart\n  const clearCart = () => {\n    setCart([]);\n  };\n\n  // Calculate total price\n  const calculateTotal = () => {\n    return cart.reduce((total, item) => {\n      return total + (item.product.price * item.quantity);\n    }, 0);\n  };\n\n  // Calculate total items\n  const calculateTotalItems = () => {\n    return cart.reduce((total, item) => total + item.quantity, 0);\n  };\n\n  const value = {\n    cart,\n    loading,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    clearCart,\n    calculateTotal,\n    calculateTotalItems\n  };\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}